on: 
  workflow_call:
    secrets:
      BOT_GPG_PRIVATE_KEY:
        description: "Service Account GPG Private Key"
        required: true
      BOT_GPG_PASSPHRASE:
        description: "Service Account GPG Passphrase"
        required: true
      BOT_TOKEN:
        description: "Service Account Access Token"
        required: true
      DISCORD_WEBHOOK:
        description: "Webhook URL for Notifications"
        required: true
    inputs:
      BOT_COMMIT_NAME:
        required: false
        description: "Service Account committer name used to sign releases"
        type: string
        default: kloud-cnf-bot
      BOT_COMMIT_EMAIL:
        required: false
        description: "Service Account committer email email used to sign releases"
        type: string
        default: kloud-cnf@kolv.in

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout files
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_TOKEN }}
      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
          git_committer_name: ${{ inputs.BOT_COMMIT_NAME }}
          git_committer_email: ${{ inputs.BOT_COMMIT_EMAIL }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Release
        if: success()
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19.0.3
          extra_plugins: |
            @semantic-release/changelog@6.0.0
            @semantic-release/git@10.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
          GIT_AUTHOR_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
      - name: Discord notification
        if: steps.semantic.outputs.new_release_published == 'true'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
